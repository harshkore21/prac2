// 9. Implement Binary search using Divide and Conquer

function binarySearch(arr, target) {
    let left = 0 
    let right = arr.length - 1 
  
    while (left <= right) {
      const mid = Math.floor((left + right) / 2) 
  
      console.log(`Step: Checking element at index ${mid}, value: ${arr[mid]}`) 
  
      if (arr[mid] === target) {
        console.log(`Found ${target} at index ${mid}`) 
        return mid  // Element found, return its index
      } else if (arr[mid] < target) {
        console.log("Target is in the right half") 
        left = mid + 1  
      } else {
        console.log("Target is in the left half") 
        right = mid - 1
      }
    }
  
    console.log(`Element ${target} not found in the array`) 
    return -1 // Target not found in the array
  }
  
const sortedArray = [1, 3, 5, 7, 9, 11, 13, 15]
const targetElement = 11

console.log(`Searching for element ${targetElement} in the array:`)
const result = binarySearch(sortedArray, targetElement)

if (result !== -1) {
  console.log(`Element ${targetElement} found at index ${result}`)
} else {
  console.log(`Element ${targetElement} not found in the array`)
}